@{
    /*
     MVC turial
     https://www.tutorialsteacher.com/mvc
     javascript turial
     https://www.w3schools.com/js/js_intro.asp
     html helper (bridge among View and Controller)
     https://www.dotnetodyssey.com/2015/03/24/getting-textbox-input-value-in-asp-net-mvc/
     */


    ViewBag.Title = "Home Page";

    // CSS
    // turial
    //https://sites.google.com/site/coolteazhuanti/css/padding
    // Does CSS have to be in the head?
    // Most browsers put it anywhere in the page, but just be aware that it only takes effect from that point onwards.Also, it's not valid HTML if you don't put it in the head element.Also, it's considered best practise to put it in the head element as it improves page render times.
    //
    // inline style
    //https://ithelp.ithome.com.tw/articles/10261535
    // different id with same style
    //https://netgen.in/apply-same-css-style-to-multiple-ids-controls/
    <style>
        #fix {
            padding-left: 30px;
        }

        #center {
            text-align: center;
        }

        #lineup1, #lineup2, #lineup3 {
            padding: 30px;
            display: inline-block;
        }
    </style>

    //
    // Javascript
    //

    //
    // Button
    //
    // the same function as: <button onclick="document.getElementById('myImage').src='\\fonts\\pic_bulboff.gif'">Turn off the light</button>
    <script>
        function Turn() {
            if (document.getElementById("myBtn").textContent == "Turn off the light") {
                // not work @@
                //document.getElementById("myImage").src = @ViewData["pic_off"];
                document.getElementById("myImage").src = "/fonts/pic_bulboff.gif";
                document.getElementById("myBtn").textContent = "Turn on the light";
            }
            else {
                //document.getElementById("myImage").src = @ViewData["pic_on"];
                document.getElementById("myImage").src = "/fonts/pic_bulbon.gif";
                document.getElementById("myBtn").textContent = "Turn off the light";
            }
            return;
        }

    </script>

    //
    // Play Animation
    //
    // method1: define function as class
    /*
    <script>
        function Player(name) {
            var rotator = document.getElementById(name);
            var images = rotator.getElementsByTagName('img');
            var intervalID;
            var counter = 1;

            function animate() {
                var i;

                for (i = 0; i < images.length; i++) {
                    images[i].style.display = 'none';
                }

                images[counter].style.display = 'block';

                counter++;

                if (counter == images.length) {
                    counter = 0;
                }
            }

            this.pause = function () {
                if (undefined !== intervalID) {
                    window.clearInterval(intervalID);
                    intervalID = undefined;
                }
            };

            this.stop = function () {
                this.pause();

                for (var i = 1; i < images.length; i++) {
                    images[i].style.display = 'none';
                }
            };

            this.play = function () {
                if (undefined === intervalID) {
                    intervalID = window.setInterval(animate, 300);
                }
            };

            this.stop();
        }

    </script>
    */
    // method2: class
    <script>
        class Player {
            // var
            rotator;
            images;
            intervalID;
            counter;

            // constructor
            constructor(name) {
                this.rotator = document.getElementById(name);
                this.images = this.rotator.getElementsByTagName('img');
                //this.intervalID;
                this.counter = 1;

                // !!! stop before play
                this.stop();
            }

            play_an() {
                for (let i = 0; i < this.images.length; i++) {
                    this.images[i].style.display = 'none';
                }

                this.images[this.counter].style.display = 'block';

                this.counter++;

                if (this.counter == this.images.length) {
                    this.counter = 0;
                }
            }

            pause() {
                if (undefined !== this.intervalID) {
                    window.clearInterval(this.intervalID);
                    this.intervalID = undefined;
                }
            }

            stop() {
                this.pause();

                for (let i = 1; i < this.images.length; i++) {
                    this.images[i].style.display = 'none';
                }
            }

            play() {
                if (undefined === this.intervalID) {
                    this.intervalID = window.setInterval(() => (this.play_an)(this), 1000);
                }
            } 
        }
    </script>

    <script>
        function playimage() {
            // method 2
            players.forEach(player => player.play());
            
            // mehtod 1
            //players.forEach(player => player['play']());

            // method old
            //player1.play();
            //player3.play();
        }

        function pauseimage() {
            // method 2
            players.forEach(player => player.pause());
            
            // method 1
            //players.forEach(player => player['pause']());

            // method old
            //player1.pause();
            //player3.pause();
        }

        function stopimage() {
            //method 2
            players.forEach(player => player.stop());
            
            // method 1
            //players.forEach(player => player['stop']());

            // method old
            //player1.stop();
            //player3.stop();
        }

        function Page_Load() {
            // method 2
            players[0] = new Player('lineup1');
            players[0].play();
            players[1] = new Player('lineup3');
            window.setTimeout((() => players[1].play()), 150);

            // method 1
            /*
            players[0] = new Player('lineup1');
            players[0]['play']();
            players[1] = new Player('lineup3');
            window.setTimeout((() => players[1]['play']()), 150);
            */
            
            // method old
            //player1 = new Player('lineup1');
            //player1.play();
            //player3 = new Player('lineup3');
            //window.setTimeout((() => player3.play()), 150);
        }

        document.onreadystatechange = function () {
            if ('complete' == document.readyState) {
                Page_Load();
            }
        };
        
        // method 1 & 2
        var players = new Array();
        
        // method old
        //var player1, player3;

    </script>
}

<h2>A Simple Webpage via ASP.NET MVC, JavaScript, HTML, and CSS </h2>

<p>ASP.NET MVC is a framwork that seperate web function into Model, View, and Controller.</p>

<p>HTML is a cross platform language that can represent webpage structure.</p>

<p>CSS is a style sheet language for decoration of HTML elements.</p>

<p>JavaScript can change HTML attribute values (such as the source of the image and the text in the button).</p>

<p></p>

<div id="fix">
    <div id="lineup1">
        <img src=@ViewData["pic_off"] style="width:100px">
        <img src=@ViewData["pic_on"] style="width:100px">
    </div>

    <div id="lineup2">
        <img id="myImage" src=@ViewData["pic_default"] style="width:100px">
    </div>

    <div id="lineup3">
        <img src=@ViewData["pic_off"] style="width:100px">
        <img src=@ViewData["pic_on"] style="width:100px">
    </div>
</div>

<div style="padding-left: 220px">
    <button id="myBtn" onclick="Turn()">Turn on the light</button>
</div>



<!-- if want to use @Html.Raw in the futher
@if (ViewData["surp_html"] != null)
{
    <div id="fix">@Html.Raw(ViewData["surp_html"])</div>
}
-->
